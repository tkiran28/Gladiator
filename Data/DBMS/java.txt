class Student{
	int rollNo;
	String name;
	LocalDate dateOfBirth;
}

	Student(){
	}
	Student(int rollNo,String name){
	}
	Student(int rollNo,String name,LocalDate dateOfBirth){
	}

//heap is used in runtime --jre
//construcutor can be private and scope of private is within same class
//new is for dynamic allocation at runtime 
//constructor cannot have return type
//constructor can be overloaded(Can create more than one constructor of class having different parameters)
//class is a user defined type where we specify attributes(member variables) and behaviour(member method and function) of the class
//every first letter of world is capital --class
//POJO class: Plain old java object
//constructor is a method having same name as the class .it is used to create an object the class.
//why multiple - based on availablity of data 
abstraction----every thing show too use is 


instance and class  variable
static will make a class variable
amazon offer example -- offer to all employee -- static
we cannot use non satic varivbale inside  satatic method but we can use static varibale inside non static method
if final varibale it must be initialized and we initizlized in static block
//inheritance(Generalization -Specialization -- is a relation and 
composition relationship-- has a 

muliple inheritance is not achicved in java not using interface


in java any class has a parent class -- object class

//abstract cl



System.gc() and Runtime.getRuntime().gc() and finalize()









//abstract class can have constructor

//method overloading - return type can be different but in case of method overriding is should be same

write a claa AppLogin to implement login functionality. 
various ways of login could be: 
1. int userId,String pwd 
2. String email,String pwd 
3. String phoneNo,String pwd 
4. int userId,int pin(4 digits) 
int userId[]={1001,1002,1003,1004} 
String[] email={"simant@lti.com","kevin@lti.com"}; 
String[] pwd={"abc@123","} 
String[] phoneNo

java collections

==/check for reference
.equals/check for data inside objects( in predefined class it works perfectly
get ride of hashcode we use tostring method to dispaly data(mainly used for testing)

why wrapper
primitives types are not used in collection api 
in java.util every thing should be object so int will not work
primitive types are pass by value(create a cpyt of value and then pass)
thread synchronization:objects can be synchronized wile primitive cannot be 
objects are pass by reference

//boxing and unboxing
arraylist is dynamic and array is static
arrylist is not synchronization 
manipulation is bit slow in arraylist so prefer linkedlist


comparable
predefined class can be sorted using collection but in case of 
1. user defined student class needs to implement comparable interface

it is necessary to use comparable or comparator incase of treeset

we cannot traverse throught hashmap so we covert it into set

read about which collection are synchronize?
in between tree value cannot be null so treemap don use null value